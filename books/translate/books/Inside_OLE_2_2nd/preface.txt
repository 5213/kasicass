PREFACE
前言

Someone once said that authors write books not to be understood but so that they themselves understand. Certainly, writing the first edition of this book, Inside OLE 2, and now the second edition, Inside OLE, has been such an experience for me. It is my sincere hope, of course, that most of my understanding will also make its way into your mind and that you will find innovative ways to exploit the various OLE technologies while having loads of fun in the process.
有人曾云：“作者因其写作，才彻底掌握所写的内容”。因此，《Inside OLE 2》第一版之后，我又忍不住写了第二版。希望阅读本书给您带来一份愉悦的心情，在享受OLE的技术的同时，理解埋藏在技术背后的设计思想。

I started working with OLE 2 in the middle of 1992. From the perspective of my job in Microsoft's Developer Relations Group, I understood the technology as merely a way to create applications that support compound documents. After all, I'd spent the previous year in the same job trying to spread the gospel about OLE version 1, which had no other purpose than the creation and management of compound documents. Because of the legacy of OLE 1, nearly everyone inside and outside Microsoft accepted OLE 2 as a refinement of OLE 1; in fact, the OLE 2 design specifications were organized around compound documents. But for some reason, the specification weighed in at more than 300 pages. There had to be something more.
我本人从92年开始接触OLE 2。从工作上来看（当时就职于微软DRG，Developer Relations Group），此技术仅仅是为了构建复合文档（compound document[1]）而设计的。毕竟，我花了大半年的时间来推广的 OLE 1 技术，唯一目的就是创建/管理复合文档。继承了 OLE 1 的名头，几乎所有人（包括微软内部），都认为 OLE 2 不过是 OLE 1 一个改进版本；而事实上亦然，OLE 2 的设计规格说明书（design specification），都是围绕着复合文档展开的。由于某种原因，规格说明书厚达300+页，且本该更厚些。

For months, I plodded through prerelease information about OLE 2 in order to create some sample applications for demonstrating compound documents. With the help of various members of the OLE development team, I gave a number of classes to help others use OLE 2 to create compound document applications. In the back of my mind, however, something still told me that OLE 2 had much more than I had originally perceived. But it was hard to stop equating OLE 2 with compound documents because every available piece of documentation used the two terms synonymously.
接下来的几个月，我辛勤劳作，准备着 OLE 2 的资料，以证明 OLE 2 是构建复合文档的利器。在 OLE 开发组同事的支持下，我撰写了一些实用的工具类，以方便创建支持复合文档的应用程序。内心深处，直觉告诉我，除了复合文档，OLE 2 还能为我更创造伟大的应用。但 OLE 2 与复合文档，千丝万缕，很难将两者一刀斩断，即使是当时所有关于OLE 2的内部技术文档上，两者也基本是同义词。

During the first weeks of 1993, I started to see that in the process of solving the most important problems in OLE 1, the OLE 2 architects had actually created a much larger system for object-based programming. They had created an extensible technology that also solved the fundamental problems of releasing different versions of software. They had made some key innovations to the fundamental notions of objects. The problem was that the architects didn't tell anyone about these things directly―or maybe I never asked. It's taken me two editions of this book to feel that I really understand what they knew all along.
93年伊始，




[1]  Compound Documents, http://msdn2.microsoft.com/en-us/library/ms693383.aspx
OLE compound documents enable users working within a single application to manipulate data written in various formats and derived from multiple sources. For example, a user might insert into a word processing document a graph created in a second application and a sound object created in a third application. Activating the graph causes the second application to load its user interface, or at least that part containing tools necessary to edit the object. Activating the sound object causes the third application to play it. In both cases, a user is able to manipulate data from external sources from within the context of a single document.

